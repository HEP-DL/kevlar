#include "services_microboone.fcl"
#include "singles_microboone.fcl"

process_name: PDKSinglesGen

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService: { fileName: "single_hist_uboone.root" }
  TimeTracker:  {}
  MemoryTracker:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_gen_services
}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
   generator: @local::microboone_singlep
   rns:       { module_type: "RandomNumberSaver" }
 }

 simulate: [ rns, generator ]
 stream1:  [ out1 ]

 trigger_paths: [simulate] 
 end_paths:     [stream1]  
}
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "single_gen_uboone.root"
   dataTier:    "generated"
   compressionLevel: 1
 }
}


outputs.out1.fileName: "prod_pdk_nubarkplus_uboone_%tc_gen.root"

physics.producers.generator.module_type: "NucleonDecay"
physics.producers.generator.DecayMode: 19
physics.producers.generator.DecayedNucleon:  2212 
