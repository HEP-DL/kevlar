#include "default_hdf5.fcl"
#include "services_microboone.fcl"
#include "singles_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "mccheatermodules.fcl"
#include "caldata_microboone.fcl"
#include "calorimetry_microboone.fcl"
#include "wirecellmodules_microboone.fcl"
#include "mcreco.fcl"

process_name: SinglesGenDL

services:
{
  TFileService: { fileName: "single_hist_uboone.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::microboone_full_services
  HDF5File:{ FileName: "output.h5"  }
}
services.BackTracker: @local::microboone_backtracker

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   -1
  firstRun:    1
  firstEvent:  1
}

physics:
{

 producers:
 {
   generator:    @local::microboone_singlep
 }

 simulate: [ generator ]
 stream1:  [ out1 ]

 trigger_paths: [ simulate ] 

 end_paths:     [ stream1 ]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "single_gen_uboone.root"
   dataTier:    "gen"
   compressionLevel: 1
 }
}

physics.producers.generator.SigmaThetaXZ: [ 5.0 ]
physics.producers.generator.SigmaThetaYZ: [ 5.0 ]
physics.producers.generator.X0: [ 100.0 ]
physics.producers.generator.Z0: [ 50.0 ]
physics.producers.generator.P0: [ 1.5 ]
physics.producers.generator.PDG: [ -211 ]