#include "services_microboone.fcl"
#include "singles_microboone.fcl"

process_name: SinglesGen

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "single_hist_uboone.root" }
  TimeTracker:  {}
  MemoryTracker:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_gen_services
}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
   generator: @local::microboone_singlep
   rns:       { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters,
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, generator ]

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #ie filters and producers
 trigger_paths: [simulate]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prod_n_0.05-5.0GeV_isotropic_uboone_%tc_gen.root"
   dataTier:    "generated"
   compressionLevel: 1
 }
}



physics.producers.generator.PDG: [ 2112 ]           # n
physics.producers.generator.PosDist: 0             # Flat position dist.
physics.producers.generator.X0: [ 128.0 ]
physics.producers.generator.Y0: [ 0.0 ]
physics.producers.generator.Z0: [ 518.5 ]
physics.producers.generator.T0: [ 3925.0 ]
physics.producers.generator.SigmaX: [ 128.0 ]      # x = (0, 256)
physics.producers.generator.SigmaY: [ 116.5 ]      # y = (-116.5, 116.5)
physics.producers.generator.SigmaZ: [ 518.5 ]      # z = (0, 1037)
physics.producers.generator.SigmaT: [ 800.0 ]        # In time
physics.producers.generator.PDist: 0               # Flat momentum dist. (0.1-2.0 GeV)
physics.producers.generator.P0: [ 2.525 ]
physics.producers.generator.SigmaP: [ 2.475 ]
physics.producers.generator.AngleDist: 0           # Flat angle dist.
physics.producers.generator.Theta0XZ: [ 0. ]       # y-azimuth
physics.producers.generator.Theta0YZ: [ 0. ]       # y-latitude
physics.producers.generator.SigmaThetaXZ: [ 180. ] # Quasi-isotropic
physics.producers.generator.SigmaThetaYZ: [ 90. ]


services.LArG4Parameters.EnabledPhysics: [ "Em",
                                            "Optical",
                                            "SynchrotronAndGN",
                                            "Ion",
                                            "Hadron",
                                            "Decay",
                                            "HadronElastic",
                                            "Stopping",
                                            "NeutronTrackingCut" ]